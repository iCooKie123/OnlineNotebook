name: Build and deploy .NET Core application to Web App OnlineNotebook20240523183558 with API Management Service OnlineNotebookapi-OnlineNotebook
on:
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: OnlineNotebook20240523183558
  AZURE_WEBAPP_PACKAGE_PATH: OnlineNotebook\publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: OnlineNotebook20240422103748ResourceGroup
  AZURE_APIM_SERVICENAME: OnlineNotebookapi
  AZURE_APIM_API_ID: OnlineNotebook
  AZURE_APIM_APPSERVICEURL: https://onlinenotebook20240523183558.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.6.2 #latest stable release at the time
  SWASHBUCKLE_DOTNET_CORE_VERSION: 3.1.x
  API_IMPORT_SPECIFICATION_PATH: OnlineNotebook\publish\swagger.json
  API_IMPORT_DLL: OnlineNotebook\bin\Release\net8.0\OnlineNotebook.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: OnlineNotebook
jobs:
  build:
    runs-on: windows-latest
    outputs:
      swagger-path: ${{steps.create_swagger_json.outputs.SWAGGER_JSON_PATH}}
      swagger-file: ${{steps.open_swagger_file.outputs.SWAGGER_FILE}}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Setup SwashBuckle .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}
      - name: Replace values in JSON file
        uses: tnikFi/json-file-transform@v1
        with:
          files: "**/appsettings.json"
          key-value-pairs: |
            ConnectionStrings.DefaultConnection=${{  secrets.DatabaseConnectionString }}
      - name: Restore
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}
      - name: Build
        id: build
        shell: pwsh
        run: |
          $buildOutput = dotnet build $env:WORKING_DIRECTORY --configuration $env:CONFIGURATION --no-restore
          $buildOutputLines = $buildOutput -split '\r?\n'
          foreach ($line in $buildOutputLines) {
           if ($line -match '->') {
             $buildPath = $line.Split('>')[1].Trim()
             Write-Output "::set-output name=build_output::$buildPath"
             break
           }
          }
      - name: Test
        run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build
      - name: Publish
        id: publish
        shell: pwsh
        run: |
          $publishOutput = dotnet publish $env:WORKING_DIRECTORY --configuration $env:CONFIGURATION --no-build --output $env:AZURE_WEBAPP_PACKAGE_PATH
          $publishOutputLines = $publishOutput -split '\r?\n'
          foreach ($line in $publishOutputLines) {
           if ($line -match '->') {
             $publishPath = $line.Split('>')[1].Trim()
             Write-Output "::set-output name=publish_output::$publishPath"
             break
           }
             }
      - name: Check optional condition
        if: contains(github.event.head_commit.message, 'update-database')
        run: echo "Database updated"
      - name: Check and Create Open API Specification Document Path
        shell: pwsh
        run: |
          $swaggerPath = "${{ steps.publish.outputs.publish_output }}swagger.json"
          if (-Not (Test-Path $swaggerPath)) {
            New-Item -ItemType File -Path $swaggerPath -Force
          }
      - name: Install Swashbuckle CLI .NET Global Tool
        run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Generate Open API Specification Document
        id: create_swagger_json
        shell: pwsh
        run: |
          $swaggerOutput = swagger tofile --output swagger.json ${{ steps.build.outputs.build_output }} "${{ env.API_IMPORT_VERSION }}"
          $swaggerOutputLines = $swaggerOutput -split '\s+' | Select-Object -Last 1
          echo $swaggerOutputLines
          echo "::set-output name=SWAGGER_JSON_PATH::$swaggerOutputLines"
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      - name: Open the swagger file and put it into output
        shell: pwsh
        id: open_swagger_file
        run: |
          echo "::set-output name=SWAGGER_FILE=Get-Content ${{ steps.create_swagger_json.outputs.SWAGGER_JSON_PATH }} "
  deploy:
    if: ${{ !github.event.act }}
    runs-on: windows-latest
    needs: build
    steps:
      - name: Check dir command
        shell: pwsh
        run: |
          dir -r swagger.json
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      - name: Download swagger Artifact
        uses: actions/download-artifact@v3
        with:
          name: swagger
          path: ${{ needs.build.outputs.swagger-path }}
      - name: Copy json file to working directory
        run: cp ${{ needs.build.outputs.swagger-path }} ${{ env.WORKING_DIRECTORY }}/swagger.json
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.OnlineNotebook20240523183558_394A }}
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SECRET }}
      - name: Write to swagger file
        id: writeSwaggerFile
        run: |
          Out-File -FilePath "/swagger.json" -InputObject ${{ needs.build.outputs.swagger-file }} -Encoding UTF8
          echo "::set-output name=path::swagger.json"
      - name: Import API into Azure API Management
        run: az apim api import --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" --service-name "${{ env.AZURE_APIM_SERVICENAME }}" --api-id "${{ env.AZURE_APIM_API_ID }}" --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" --specification-path ${{steps.writeSwaggerFile.output.path}} --specification-format OpenApi --subscription-required false
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: logout
        run: >
          az logout
